apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: "kafka"
  replicas: 6
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: debezium/kafka
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 9093
              name: kafka-external
          command: ["/bin/sh"]
          args: ["-c", "BROKER_ID=${POD_NAME##*-} KAFKA_ADVERTISED_LISTENERS=EXTERNAL://localhost:3000${POD_NAME##*-},INTERNAL://$(POD_NAME).kafka.datacubepy.svc.cluster.local:9092 /docker-entrypoint.sh start"]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS
              value: "20000"
            - name: KAFKA_LISTENERS
              value: "EXTERNAL://:9093,INTERNAL://:9092"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
#            - name: EXTRA_ARGS
#              value: "-javaagent:/jmx_javaagent/jmx_prometheus_javaagent-0.19.0.jar=8088:/jmx_config_metrics/jmx-prometheus-config.yaml"
#          volumeMounts:
#            - mountPath: /jmx_config_metrics
#              name: config-vol-metrics
#            - mountPath: /jmx_javaagent
#              name: config-vol-javaagent
#      volumes:
#        - name: config-vol-metrics
#          configMap:
#            name: jmx-config
#        - name: config-vol-javaagent
#          configMap:
#            name: jmx-javaagent
          resources:
            limits:
              memory: 1Gi
              cpu: 300m
              ephemeral-storage: 1Gi